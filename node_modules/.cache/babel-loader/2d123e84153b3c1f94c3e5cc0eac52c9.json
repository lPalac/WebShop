{"ast":null,"code":"var _jsxFileName = \"D:\\\\Faks\\\\Napredne web\\\\vj4.3\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Game from \"./Game\";\nimport GameGenre from \"./GameGenre\";\nimport \"./css/dropdown.css\";\nimport ListGames from \"./ListGames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [gamesGenre, setGamesGenre] = useState([]);\n  const [games, setGames] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [gamesList, setGamesList] = useState([]);\n  useEffect(() => {\n    //za dropdown\n    getGamesGenre();\n  }, []);\n  useEffect(() => {\n    //za listu kupnje\n    getGamesList();\n  }, []);\n\n  const changeSelected = event => {\n    let nes = event.target.selectedIndex; //console.log(gamesGenre[nes]);\n\n    setGames(gamesGenre[nes].name);\n  };\n\n  const getGamesGenre = async () => {\n    const response = await fetch(\"http://demo2580688.mockable.io/Games\");\n    const data = await response.json();\n    setGamesGenre(data);\n  };\n\n  const getGamesList = async () => {\n    const response = await fetch(\"http://demo2580688.mockable.io/Games\");\n    const data = await response.json();\n    console.log(data);\n    setGamesList(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u017Danr igara\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          class: \"dropdown-content\",\n          onChange: changeSelected,\n          children: /*#__PURE__*/_jsxDEV(GameGenre, {\n            gamesGenre: genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n          /* gamesGenre.map(genre => {\n             return <Game genre={genre.genre} />\n          })*/\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Igre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          class: \"dropdown-content\",\n          children: games.map(game => /*#__PURE__*/_jsxDEV(Game, {\n            genre: game\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"search-input\",\n        type: \"text\",\n        placeholder: \"Search...\",\n        onChange: event => {\n          setSearchTerm(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), games.filter(game => {\n        if (searchTerm == \"\") {\n          return game; //nefiltrira nista ako je prazno i samo mapira\n        } else if (game.toLowerCase().includes(searchTerm.toLowerCase())) {\n          return game; //samo ce vratit one koje includa sto je u inputu\n        }\n      }).map(game => /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"search-list\",\n        children: /*#__PURE__*/_jsxDEV(ListGames, {\n          game: game\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hBclUU13zfD2j4E2NVycIIPsNTE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Faks/Napredne web/vj4.3/src/App.js"],"names":["React","useState","useRef","useEffect","Game","GameGenre","ListGames","App","gamesGenre","setGamesGenre","games","setGames","searchTerm","setSearchTerm","gamesList","setGamesList","getGamesGenre","getGamesList","changeSelected","event","nes","target","selectedIndex","name","response","fetch","data","json","console","log","genre","map","game","value","filter","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\"\nimport Game from \"./Game\"\nimport GameGenre from \"./GameGenre\";\nimport \"./css/dropdown.css\"\nimport ListGames from \"./ListGames\";\n\n\n\nfunction App() {\n  \n  const [gamesGenre, setGamesGenre] = useState([]);\n  const [games, setGames] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [gamesList,setGamesList] = useState([]);\n  \n  useEffect(()=>{ //za dropdown\n    getGamesGenre()\n  },[])\n\n  useEffect(()=>{ //za listu kupnje\n    getGamesList()\n  },[])\n\n  const changeSelected = event => {\n    let nes = event.target.selectedIndex;\n    //console.log(gamesGenre[nes]);\n    setGames(gamesGenre[nes].name)\n\n  }\n  const getGamesGenre = async () => {\n    const response = await fetch(\"http://demo2580688.mockable.io/Games\")\n    const data = await response.json();\n    setGamesGenre(data)\n  }\n\n  const getGamesList = async () => {\n    const response = await fetch(\"http://demo2580688.mockable.io/Games\")\n    const data = await response.json();\n    console.log(data)\n    setGamesList(data)\n  }\n\n  return (\n    <div>\n      \n      <div>\n        <div class=\"dropdown\">\n          <p>Å½anr igara</p>\n          <select class=\"dropdown-content\" onChange={changeSelected}>\n            {\n\n              <GameGenre gamesGenre = {genre}/>\n               /* gamesGenre.map(genre => {\n                  return <Game genre={genre.genre} />\n              })*/\n                \n            }\n          </select>\n        </div>\n        \n        <div class=\"dropdown\">\n        <p>Igre</p>\n            <select class=\"dropdown-content\">\n              {games.map(game =>(\n                <Game genre={game}/>))}\n            </select>\n        </div>\n      </div>\n\n      <div class=\"search\">\n        <input class=\"search-input\" type=\"text\" placeholder=\"Search...\" onChange={event => {setSearchTerm(event.target.value)}}></input>\n        {\n          games.filter((game=>{\n            if (searchTerm ==\"\"){\n              return game //nefiltrira nista ako je prazno i samo mapira\n            } else if (game.toLowerCase().includes(searchTerm.toLowerCase())){\n              return game //samo ce vratit one koje includa sto je u inputu\n            }\n          })).map(game => (\n            <p class=\"search-list\"><ListGames game={game} /></p>))\n        }\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}